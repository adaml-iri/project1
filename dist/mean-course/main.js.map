{"version":3,"sources":["webpack:///./src/app/app.component.html","webpack:///./src/app/header/header.component.html","webpack:///./src/app/posts/post-create/post-create.component.html","webpack:///./src/app/posts/post-list/post-list.component.html","webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/header/header.component.ts","webpack:///./src/app/posts/post-create/post-create.component.css","webpack:///./src/app/posts/post-create/post-create.component.ts","webpack:///./src/app/posts/post-list/post-list.component.css","webpack:///./src/app/posts/post-list/post-list.component.ts","webpack:///./src/app/posts/posts.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["module.exports = \"<app-header></app-header>\\n<main>\\n  <app-post-create></app-post-create>\\n  <app-post-list></app-post-list>\\n</main>\\n\"","module.exports = \"<mat-toolbar color=\\\"primary\\\">MyMessages</mat-toolbar>\\n\"","module.exports = \"<mat-card>\\n  <form (submit)=\\\"onAddPost(postForm)\\\" #postForm=\\\"ngForm\\\">\\n    <mat-form-field>\\n      <input\\n        matInput\\n        type=\\\"text\\\"\\n        name=\\\"title\\\"\\n        ngModel\\n        required\\n        minlength=\\\"3\\\"\\n        placeholder=\\\"Post Title\\\"\\n        #title=\\\"ngModel\\\">\\n      <mat-error *ngIf=\\\"title.invalid\\\">Please enter a post title.</mat-error>\\n    </mat-form-field>\\n    <mat-form-field>\\n      <textarea\\n        matInput\\n        rows=\\\"4\\\"\\n        name=\\\"content\\\"\\n        ngModel\\n        required\\n        placeholder=\\\"Post Content\\\"\\n        #content=\\\"ngModel\\\"></textarea>\\n      <mat-error *ngIf=\\\"content.invalid\\\">Please enter a post title.</mat-error>\\n    </mat-form-field>\\n    <button\\n      mat-raised-button\\n      color=\\\"accent\\\"\\n      type=\\\"submit\\\">Save Post</button>\\n  </form>\\n</mat-card>\\n\"","module.exports = \"<mat-accordion multi=\\\"true\\\" *ngIf=\\\"posts.length > 0\\\">\\n  <mat-expansion-panel *ngFor=\\\"let post of posts\\\">\\n    <mat-expansion-panel-header>\\n      {{ post.title }}\\n    </mat-expansion-panel-header>\\n    <p>{{ post.content }}</p>\\n    <mat-action-row>\\n      <button mat-button color=\\\"primary\\\">EDIT</button>\\n      <button mat-button color=\\\"warn\\\" (click)=\\\"onDelete(post.id)\\\">DELETE</button>\\n    </mat-action-row>\\n  </mat-expansion-panel>\\n</mat-accordion>\\n<p class=\\\"info-text mat-body-1\\\" *ngIf=\\\"posts.length <= 0\\\">No posts added yet!</p>\\n\"","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"main {\\n  width: 80%;\\n  margin: 1rem auto;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxVQUFVO0VBQ1YsaUJBQWlCO0FBQ25CIiwiZmlsZSI6InNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJtYWluIHtcbiAgd2lkdGg6IDgwJTtcbiAgbWFyZ2luOiAxcmVtIGF1dG87XG59XG4iXX0= */\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n}\n","import { BrowserModule } from \"@angular/platform-browser\";\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\nimport { NgModule } from \"@angular/core\";\nimport { FormsModule } from \"@angular/forms\";\nimport { HttpClientModule } from \"@angular/common/http\";\nimport {\n  MatInputModule,\n  MatCardModule,\n  MatButtonModule,\n  MatToolbarModule,\n  MatExpansionModule\n} from \"@angular/material\";\n\nimport { AppComponent } from \"./app.component\";\nimport { PostCreateComponent } from \"./posts/post-create/post-create.component\";\nimport { HeaderComponent } from \"./header/header.component\";\nimport { PostListComponent } from \"./posts/post-list/post-list.component\";\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PostCreateComponent,\n    HeaderComponent,\n    PostListComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    BrowserAnimationsModule,\n    MatInputModule,\n    MatCardModule,\n    MatButtonModule,\n    MatToolbarModule,\n    MatExpansionModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html'\n})\nexport class HeaderComponent {}\n","module.exports = \"mat-form-field,\\ntextarea {\\n  width: 100%;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcG9zdHMvcG9zdC1jcmVhdGUvcG9zdC1jcmVhdGUuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7RUFFRSxXQUFXO0FBQ2IiLCJmaWxlIjoic3JjL2FwcC9wb3N0cy9wb3N0LWNyZWF0ZS9wb3N0LWNyZWF0ZS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsibWF0LWZvcm0tZmllbGQsXG50ZXh0YXJlYSB7XG4gIHdpZHRoOiAxMDAlO1xufVxuIl19 */\"","import { Component } from \"@angular/core\";\nimport { NgForm } from \"@angular/forms\";\n\nimport { PostsService } from \"../posts.service\";\n\n@Component({\n  selector: \"app-post-create\",\n  templateUrl: \"./post-create.component.html\",\n  styleUrls: [\"./post-create.component.css\"]\n})\nexport class PostCreateComponent {\n  enteredTitle = \"\";\n  enteredContent = \"\";\n\n  constructor(public postsService: PostsService) {}\n\n  onAddPost(form: NgForm) {\n    if (form.invalid) {\n      return;\n    }\n    this.postsService.addPost(form.value.title, form.value.content);\n    form.resetForm();\n  }\n}\n","module.exports = \":host {\\n  display: block;\\n  margin-top: 1rem;\\n}\\n\\n.info-text {\\n  text-align: center;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcG9zdHMvcG9zdC1saXN0L3Bvc3QtbGlzdC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsY0FBYztFQUNkLGdCQUFnQjtBQUNsQjs7QUFFQTtFQUNFLGtCQUFrQjtBQUNwQiIsImZpbGUiOiJzcmMvYXBwL3Bvc3RzL3Bvc3QtbGlzdC9wb3N0LWxpc3QuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIjpob3N0IHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIG1hcmdpbi10b3A6IDFyZW07XG59XG5cbi5pbmZvLXRleHQge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG4iXX0= */\"","import { Component, OnInit, OnDestroy } from \"@angular/core\";\nimport { Subscription } from 'rxjs';\n\nimport { Post } from \"../post.model\";\nimport { PostsService } from \"../posts.service\";\n\n@Component({\n  selector: \"app-post-list\",\n  templateUrl: \"./post-list.component.html\",\n  styleUrls: [\"./post-list.component.css\"]\n})\nexport class PostListComponent implements OnInit, OnDestroy {\n  // posts = [\n  //   { title: \"First Post\", content: \"This is the first post's content\" },\n  //   { title: \"Second Post\", content: \"This is the second post's content\" },\n  //   { title: \"Third Post\", content: \"This is the third post's content\" }\n  // ];\n  posts: Post[] = [];\n  private postsSub: Subscription;\n\n  constructor(public postsService: PostsService) {}\n\n  ngOnInit() {\n    this.postsService.getPosts();\n    this.postsSub = this.postsService.getPostUpdateListener()\n      .subscribe((posts: Post[]) => {\n        this.posts = posts;\n      });\n  }\n\n  onDelete(postId: string) {\n    this.postsService.deletePost(postId);\n  }\n\n  ngOnDestroy() {\n    this.postsSub.unsubscribe();\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { Subject } from \"rxjs\";\nimport { map } from 'rxjs/operators';\n\nimport { Post } from \"./post.model\";\n\n@Injectable({ providedIn: \"root\" })\nexport class PostsService {\n  private posts: Post[] = [];\n  private postsUpdated = new Subject<Post[]>();\n\n  constructor(private http: HttpClient) {}\n\n  getPosts() {\n    this.http\n      .get<{ message: string; posts: any }>(\n        \"http://localhost:3000/api/posts\"\n      )\n      .pipe(map((postData) => {\n        return postData.posts.map(post => {\n          return {\n            title: post.title,\n            content: post.content,\n            id: post._id\n          };\n        });\n      }))\n      .subscribe(transformedPosts => {\n        this.posts = transformedPosts;\n        this.postsUpdated.next([...this.posts]);\n      });\n  }\n\n  getPostUpdateListener() {\n    return this.postsUpdated.asObservable();\n  }\n\n  addPost(title: string, content: string) {\n    const post: Post = { id: null, title: title, content: content };\n    this.http\n      .post<{ message: string, postId: string }>(\"http://localhost:3000/api/posts\", post)\n      .subscribe(responseData => {\n        const id = responseData.postId;\n        post.id = id;\n        this.posts.push(post);\n        this.postsUpdated.next([...this.posts]);\n      });\n  }\n\n  deletePost(postId: string) {\n    this.http.delete(\"http://localhost:3000/api/posts/\" + postId)\n      .subscribe(() => {\n        const updatedPosts = this.posts.filter(post => post.id !== postId);\n        this.posts = updatedPosts;\n        this.postsUpdated.next([...this.posts]);\n      });\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}